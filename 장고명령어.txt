장고 명령어 정리

프로젝트 만들기
django-admin startproject [프로젝트이름]

앱 만들기
django-admin startapp [앱이름]

앱 등록
프로젝트 디렉토리 > 프로젝트 이름 디렉토리 > settings.py > installed_apps 리스트변수에 만든 앱 등록.

만든model 마이그레이션
python manage.py makemigrations
(no change detected -> 프로젝트 settings.py에 새로 만든 앱을 등록하지 않아서 생기는 에러)
python manage.py migrate

db확인용 cli 정리
db들어가기 : sqlite3 db.sqlite3
.tables : db내 테이블 확인
.schema fastcampus_fcuser: 스키마 확인
SELECT * FROM fastcampus_fcuser : fastcampus_fcuser테이블 내 데이터 확인.
8888port에 django 서버 시작
python manage.py runserver 8888

2-3
admin page 슈퍼유저 만들기
python manage.py createsuperuser
admin page 계정 정보
username : mj
password : 2121

2-4 Admin 활용
admin페이지에 앱 등록하기.
앱 폴더에서 admin.py파일에서 등록 가능.
admin.py에서 list_display라는 변수에 admin페이지에 보여주고 싶은 칼럼명을 넣어주면 admin페이지에서 그대로 보여짐.

verbose_name - admin페이지에서 출력될 내용 설정
verbose_name_plural - admin페이지에서 출력될 내용 설정(복수형)

2-5
간단한 html 제작 시 부트스트랩(bootstrap) 활용!
view.py와 html템플릿 연결방법.
	1. html템플릿 만들기.(기본적으로 templates폴더를 바라본다.)
	2. view.py파일에 html을 return할 함수 선언. - 함수의 인자로는 request, django의 render함수를 이용하여 request응답과 html파일 return.
	3. 프로젝트/urls.py에 앱에서 만든 urls등록.
	4. 앱/urls.py에 path지정. - urlpatterns에 경로와 view.py에서 지정한 함수를 인자로 넘긴다.

2-6 : MTV의 T,V 만들기 (회원가입)
form의 속성 중 action은 어디에 요청을 줄지 알려주는 부분
예를 들어 form method='POST' action="." 이면 현재 페이지에 POST요청을 준다는 뜻.
form submit시 현재 페이지에 요청. 

(보안)authentication 기능 : 장고에서 폼을 전달해 줄 때 csrf_token을 꼭 넘겨주어야 한다. 안써주게 되면 에러가 나게 된다.
{% csrf_token %} 폼 안에 써주어야 함.

2-7 MTV의 T,V만들기 (3) - 회원가입
render함수에 값을 전달해줘서 현재 페이지에 에러 내용을 그대로 보여줄 수 있도록 해주면 됨. 편리성!

장고 제공 make_password기능 사용! 비밀번호를 암호화해준다.
django.contrib.auth.hashers.make_password
django.contrib.auth.hashers.check_password
기능 사용 가능.

2-8 퀴즈 - 회원에 이메일 필드 추가하기
	1. model에 새로운 필드 추가
	2. html에 입력받을 수 있도록 input창 추가
	3. views에 기능 추가

python manage.py migrate 할 때  table already exist 에러 - 블로그 확인, python manage.py migrate --fake

3-1 static 파일 관리하기.(Azure CDN)
	CDN이란 
	CDN(콘텐츠 전송 네트워크)은 지리적으로 분산된 여러 개의 서버입니다. 웹 콘텐츠를 사용자와 가까운 곳에서 전송함으로써 전송 속도를 높입니다. 전 세계 데이터센터는 파일 복사본을 임시로 저장하는 프로세스인 캐싱을 사용합니다. 따라서 사용자는 가까운 서버를 통해 웹 활성화 디바이스 또는 브라우저에서 인터넷 콘텐츠에 빠르게 접속할 수 있습니다. CDN은 웹 페이지, 이미지, 비디오 등의 콘텐츠를 사용자의 물리적 위치와 가까운 프록시 서버에 캐싱합니다. 이렇게 하면 콘텐츠가 로딩될 때까지 기다릴 필요 없이 영화 감상, 소프트웨어 다운로드, 은행 잔고 확인, 소셜 미디어 포스팅, 구매 등의 작업을 할 수 있습니다.

	CDN을 마치 ATM처럼 생각해도 좋습니다. 여러 곳에 ATM을 설치해 놓으면 사용자가 빠르고 효율적으로 현금을 찾을 수 있습니다. 은행에서 긴 줄을 서서 기다릴 필요 없이 가까운 곳에 있는 ATM을 바로 사용하면 됩니다.

	인터넷으로 그래픽과 비디오 등 용량이 큰 웹 콘텐츠를 전송하면 트래픽이 폭주할 때처럼 네트워크 혼잡 문제가 발생할 수 있습니다. CDN 서비스는 이러한 문제를 해결하기 위해 개발되었습니다. 중앙 서버에서 개별 사용자에게 콘텐츠를 전송하려면 시간이 너무 오래 걸렸습니다. 이제 CDN은 텍스트, 그래픽, 스크립트, 미디어 파일부터 소프트웨어 다운로드, 문서, 포털, 이커머스, 라이브 스트리밍 미디어, 온디맨드 비디오 스트리밍 미디어, 소셜 미디어 사이트에 이르기까지 모든 것을 처리합니다.

	또한 CDN은 보안을 강화해 DDoS(Distributed Denial-of-Service) 공격과 같은 보안 문제와 악의적 공격자를 차단하는 기능을 웹사이트에 제공할 수 있습니다.

	*bootswatch에서 css테마파일을 받을 수 있다.
	그래서 cdn으로 링크를 통해서 css나 javascript를 받아서 사용하거나 아니면 직접 파일을 받아서 그 파일을 읽어오도록 설정할 수 있다. 

4-1 로그인 - 세션이란.
	 쿠키는 웹사이트(서버)별로 따로 저장해두고 로그인 기능
	 쿠키, 로그인, 세션...

4-2 로그인만들기
	register페이지 만들때랑 거의 비슷.
	Fcuser class로부터 불러오는 함수와 check_password 함수 기억해두면 좋을 듯
	Fcuser.objects.get(조건)

4-3 로그인만들기 - 세션
	로그인 기능을 만들 떄 세션별(브라우저별)로 쿠키값이 생길텐데 이 쿠키값이 서버가 분간할 수 있는 식별자 기능을 하고, 여기 앱에서는 request.session변수에 딕셔너리처럼 변수를 입력하여 사용할 수 있다.
	쿠키는 각 세션(브라우저)의 고유식별자라고 생각해도 되는건가?
	
4-4 로그아웃
	클라이언트에는 아무런 정보가 없고 서버에만 정보가 있기 때문에 보안에 좋다.


4-5 MTV의 T 확장 - 상속
	중복되는 코드를 없애주고
	예를 들어 meta 테그를 수정할려고 한다면 한번의 작업으로 모든 상속받은 html에 적용가능하도록 만들 수 있다.

4-6 Form 활용하기 - 1
	django에서 제공하는 form활용하기.

5-1 게시판만들기
	플라스크에서 sqlalchemy쓰던 것들을 장고에서는 알아서 잘 처리해주는것이 참 좋은것 같기도 하고 이것도 연습과 숙련이 필요함.

5-2 글쓰기, 글 상세보기
	이 부분이 숙련해야할 부분이 많다.
	html쓰는것과 db관련 이해, 변수들이 물고 물리는 것, 그리고 django의 프로세스 이해 여기 다시한번 숙련하는 부분으로 하자.

5-3 예외처리
	예외처리시 try, except구문 활용

5-4 paginator
	bootstrap에서 html코드 테그 코드 참고

5-5 리뷰 및 프로젝트 보완
	btn-block depreciated in bootstrap. use w-100 instead.
	사이트 만들때 필요한 이것저것들